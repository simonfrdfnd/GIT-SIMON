<UserControl
  x:Class="Nexio.Bat.Emi.VisuV4.Definition.View.EmiOverrideView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:Nexio.Wpf.Controls;assembly=Nexio.Wpf"
  xmlns:converters="clr-namespace:Nexio.Bat.Emi.VisuV4.Definition.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:Nexio.Bat.Emi.VisuV4.Definition.View"
  xmlns:markups="clr-namespace:Nexio.Bat.Emi.VisuV4.Definition.Markups"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:model="clr-namespace:Nexio.Bat.Emi.VisuV4.Domain.Model;assembly=Nexio.Bat.Emi.VisuV4.Domain"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:validation="clr-namespace:Nexio.Validation;assembly=Nexio"
  xmlns:viewModel="clr-namespace:Nexio.Bat.Emi.VisuV4.Definition.ViewModel"
  xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
  d:DesignHeight="450"
  d:DesignWidth="800"
  mc:Ignorable="d">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Nexio.Wpf;component/Themes/Converters.xaml" />
        <ResourceDictionary Source="/Nexio.Wpf;component/Themes/Colors.xaml" />
        <ResourceDictionary Source="/Nexio.Wpf;component/Styles/ExtendedDataGridStyle.xaml" />
      </ResourceDictionary.MergedDictionaries>
      <Style x:Key="LockCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type CheckBox}">
              <materialDesign:PackIcon
                x:Name="checkboxImage"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent"
                Foreground="Red"
                Kind="Lock" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsChecked" Value="False">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                  <materialDesign:PackIcon
                    x:Name="checkboxImage"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Kind="LockOpen" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
          <Trigger Property="IsChecked" Value="{x:Null}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                  <materialDesign:PackIcon
                    x:Name="checkboxImage"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Foreground="Gray"
                    Kind="LockOpen" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="VisibilityCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type CheckBox}">
              <materialDesign:PackIcon
                x:Name="checkboxImage"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="Transparent"
                Kind="Eye" />
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="IsChecked" Value="False">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                  <materialDesign:PackIcon
                    x:Name="checkboxImage"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    Kind="EyeOff" />
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Trigger>
          <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="DimGray" />
          </Trigger>
        </Style.Triggers>
      </Style>
      <converters:OverrideGroupToTitleConverter x:Key="OverrideGroupToTitleConverter" />
      <converters:SelectionToOverrideGroupConverter x:Key="SelectionToOverrideGroupConverter" />
      <converters:BooleanOrToVisibilityConverter x:Key="BooleanOrToVisibilityConverter" />
      <converters:OverrideGroupEqualsConverter x:Key="OverrideGroupEqualsConverter" />
      <ObjectDataProvider
        x:Key="Overrides"
        MethodName="GetValues"
        ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
          <x:Type TypeName="viewModel:EmiOverrideGroup" />
        </ObjectDataProvider.MethodParameters>
      </ObjectDataProvider>

      <DataTemplate x:Key="CurveTemplate">
        <Border
          Padding="1"
          BorderThickness="1"
          CornerRadius="1">
          <Border.Style>
            <Style TargetType="Border">
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsValid}" Value="True">
                  <Setter Property="BorderBrush" Value="Transparent" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsValid}" Value="False">
                  <Setter Property="BorderBrush" Value="Red" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" SharedSizeGroup="CurveAction" />
              <ColumnDefinition Width="*" SharedSizeGroup="CurveDetecteur" />
              <ColumnDefinition Width="*" SharedSizeGroup="CurvePosition" />
              <ColumnDefinition Width="*" SharedSizeGroup="CurveSize" />
              <ColumnDefinition Width="*" SharedSizeGroup="CurveColor" />
              <ColumnDefinition Width="*" SharedSizeGroup="CurveVisibility" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <FrameworkElement Name="scopeProxy" DataContext="{Binding}" />
            <Button
              Grid.Column="0"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Background="Transparent"
              BorderBrush="Transparent"
              Command="{Binding DataContext.RemoveCurveCommand, ElementName=proxy}"
              CommandParameter="{Binding}">
              <materialDesign:PackIcon Foreground="Red" Kind="Trash" />
            </Button>
            <controls:ComboBox
              Grid.Column="1"
              VerticalAlignment="Center"
              ItemsSource="{Binding Source={markups:EnumBindingSource {x:Type model:Detector}, True}}"
              SelectedValue="{Binding Detector, UpdateSourceTrigger=PropertyChanged}" />
            <controls:ComboBox
              Grid.Column="2"
              VerticalAlignment="Center"
              ItemsSource="{Binding DataContext.Positions, ElementName=proxy}"
              SelectedValue="{Binding Position}"
              Visibility="{Binding IsLimit, Converter={StaticResource BooleanToNotVisibilityConverter}}" />

            <!--  Size  -->
            <Grid Grid.Column="3">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <controls:ComboBox
                Grid.Column="0"
                VerticalAlignment="Center"
                ItemsSource="{Binding DataContext.Sizes, ElementName=proxy}"
                SelectedValue="{Binding Width, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.ItemTemplate>
                  <DataTemplate DataType="sys:Double">
                    <Rectangle Width="25" Height="{Binding}">
                      <Rectangle.Fill>
                        <SolidColorBrush Color="{Binding DataContext.Color, ElementName=scopeProxy}" />
                      </Rectangle.Fill>
                    </Rectangle>
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </controls:ComboBox>
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.LockSize}" />
            </Grid>
            <!--  Color  -->
            <Grid Grid.Column="4">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <xctk:ColorPicker
                Grid.Column="0"
                VerticalAlignment="Center"
                SelectedColor="{Binding Color}"
                ShowDropDownButton="False" />
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.LockColor}" />
            </Grid>
            <!--  IsVisible  -->
            <StackPanel Grid.Column="5" Orientation="Horizontal">
              <CheckBox
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource VisibilityCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.IsVisible}" />
              <CheckBox
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideIsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.LockVisibility}" />
            </StackPanel>

            <materialDesign:PackIcon
              Grid.Column="6"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Foreground="Red"
              Kind="Information"
              Visibility="{Binding IsValid, Converter={StaticResource BooleanToNotVisibilityConverter}}">
              <materialDesign:PackIcon.ToolTip>
                <ToolTip Background="Red" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                  <ItemsControl ItemsSource="{Binding Errors}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate DataType="validation:ValidationMessage">
                        <TextBlock Foreground="White" Text="{Binding Message}" />
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </ToolTip>
              </materialDesign:PackIcon.ToolTip>
            </materialDesign:PackIcon>
          </Grid>
        </Border>
      </DataTemplate>

      <DataTemplate x:Key="PointTemplate" DataType="viewModel:PointOverrideViewModel">
        <Border
          Padding="1"
          BorderThickness="1"
          CornerRadius="1">
          <Border.Style>
            <Style TargetType="Border">
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsValid}" Value="True">
                  <Setter Property="BorderBrush" Value="Transparent" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsValid}" Value="False">
                  <Setter Property="BorderBrush" Value="Red" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="Auto"
                MinWidth="30"
                SharedSizeGroup="PointAction" />
              <!--<ColumnDefinition SharedSizeGroup="PointDetecteur" MinWidth="60" Width="*"></ColumnDefinition>-->
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointSource" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointColumn" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointPosition" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointSymbol" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointSize" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointColor" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointProjection" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointVisibility" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <FrameworkElement Name="scopeProxy" DataContext="{Binding}" />

            <StackPanel
              Grid.Column="0"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Orientation="Horizontal">
              <Button
                Background="Transparent"
                BorderBrush="Transparent"
                Command="{Binding DataContext.RemovePointCommand, ElementName=proxy}"
                CommandParameter="{Binding}">
                <materialDesign:PackIcon Foreground="Red" Kind="Trash" />
              </Button>
              <CheckBox
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding IsStyleApplied, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                IsThreeState="True"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.AppliedStyle}" />
            </StackPanel>

            <!--  Source  -->
            <controls:ComboBox
              Grid.Column="1"
              IsEditable="True"
              ItemsSource="{Binding DataContext.Sources, ElementName=proxy}"
              Text="{Binding SourceName}" />

            <controls:ComboBox
              Grid.Column="2"
              IsEditable="True"
              ItemsSource="{Binding Columns}"
              Text="{Binding Column}" />

            <controls:ComboBox
              Grid.Column="3"
              VerticalAlignment="Center"
              IsEditable="True"
              ItemsSource="{Binding DataContext.Positions, ElementName=proxy}"
              Text="{Binding Position}" />

            <!--  Symbol  -->
            <Grid Column="4">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <controls:ComboBox
                Grid.Column="0"
                ItemsSource="{Binding DataContext.AvailableSymbols, ElementName=proxy}"
                SelectedValue="{Binding SymbolId, UpdateSourceTrigger=PropertyChanged}"
                SelectedValuePath="Id">
                <ComboBox.ItemTemplate>
                  <DataTemplate DataType="viewModel:Symbol">
                    <Path
                      Width="15"
                      Height="15"
                      HorizontalAlignment="Center"
                      Data="{Binding Data}"
                      Stretch="Uniform"
                      Stroke="{Binding DataContext.Color, ElementName=scopeProxy, Converter={StaticResource ColorToBrushConverter}}"
                      StrokeThickness="2">
                      <Path.Style>
                        <Style TargetType="{x:Type Path}">
                          <Setter Property="Fill" Value="Transparent" />
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Id}" Value="2">
                              <Setter Property="Fill" Value="{Binding DataContext.Color, ElementName=scopeProxy, Converter={StaticResource ColorToBrushConverter}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Id}" Value="6">
                              <Setter Property="Fill" Value="{Binding DataContext.Color, ElementName=scopeProxy, Converter={StaticResource ColorToBrushConverter}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Id}" Value="7">
                              <Setter Property="Fill" Value="{Binding DataContext.Color, ElementName=scopeProxy, Converter={StaticResource ColorToBrushConverter}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Id}" Value="15">
                              <Setter Property="Fill" Value="{Binding DataContext.Color, ElementName=scopeProxy, Converter={StaticResource ColorToBrushConverter}}" />
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Path.Style>
                    </Path>
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </controls:ComboBox>
              <CheckBox
                Grid.Column="1"
                IsChecked="{Binding OverrideSymbol}"
                Style="{StaticResource LockCheckBox}" />
            </Grid>
            <!--  Size  -->
            <Grid Grid.Column="5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <controls:ComboBox
                Grid.Column="0"
                VerticalAlignment="Center"
                ItemsSource="{Binding DataContext.PointSizes, ElementName=proxy}"
                SelectedValue="{Binding Size, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.OverrideSize}" />
            </Grid>
            <!--  Color  -->
            <Grid Grid.Column="6">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <xctk:ColorPicker
                Grid.Column="0"
                VerticalAlignment="Center"
                SelectedColor="{Binding Color}"
                ShowDropDownButton="False" />
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.OverrideColor}" />
            </Grid>
            <!--  Projection  -->
            <Grid Grid.Column="7">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <CheckBox
                Grid.Column="0"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding UseProjection}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Projection}" />
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideUseProjection}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.OverrideProjection}" />
            </Grid>

            <!--  IsVisible  -->
            <Grid Grid.Column="8">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <CheckBox
                Grid.Column="0"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource VisibilityCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.IsVisible}" />
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideIsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.OverrideSize}" />
            </Grid>

            <materialDesign:PackIcon
              Grid.Column="8"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Foreground="Red"
              Kind="Information"
              Visibility="{Binding IsValid, Converter={StaticResource BooleanToNotVisibilityConverter}}">
              <materialDesign:PackIcon.ToolTip>
                <ToolTip Background="Red" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                  <ItemsControl ItemsSource="{Binding Errors}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate DataType="validation:ValidationMessage">
                        <TextBlock Foreground="White" Text="{Binding Message}" />
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </ToolTip>
              </materialDesign:PackIcon.ToolTip>
            </materialDesign:PackIcon>
          </Grid>
        </Border>
      </DataTemplate>

      <DataTemplate x:Key="ExternalCurveTemplate">
        <Border
          Padding="1"
          BorderThickness="1"
          CornerRadius="1">
          <Border.Style>
            <Style TargetType="Border">
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsValid}" Value="True">
                  <Setter Property="BorderBrush" Value="Transparent" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsValid}" Value="False">
                  <Setter Property="BorderBrush" Value="Red" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </Border.Style>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurveAction" />
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurveProject" />
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurveName" />
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurvePosition" />
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurveSize" />
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurveColor" />
              <ColumnDefinition Width="*" SharedSizeGroup="ExternalCurveVisibility" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <FrameworkElement Name="scopeProxy" DataContext="{Binding}" />
            <Button
              Grid.Column="0"
              VerticalAlignment="Center"
              Background="Transparent"
              BorderBrush="Transparent"
              Command="{Binding DataContext.RemoveExternalCurveCommand, ElementName=proxy}"
              CommandParameter="{Binding}">
              <materialDesign:PackIcon Foreground="Red" Kind="Trash" />
            </Button>
            <controls:ComboBox
              Grid.Column="1"
              VerticalAlignment="Center"
              IsEditable="True"
              ItemsSource="{Binding DataContext.Projects, ElementName=proxy}"
              Text="{Binding Project}" />
            <controls:TextBox Grid.Column="2" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
            <controls:ComboBox
              Grid.Column="3"
              VerticalAlignment="Center"
              ItemsSource="{Binding DataContext.Positions, ElementName=proxy}"
              SelectedValue="{Binding Position}" />

            <!--  Size  -->
            <Grid Grid.Column="4">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <controls:ComboBox
                Grid.Column="0"
                VerticalAlignment="Center"
                ItemsSource="{Binding DataContext.Sizes, ElementName=proxy}"
                SelectedValue="{Binding Width, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.ItemTemplate>
                  <DataTemplate DataType="sys:Double">
                    <Rectangle Width="25" Height="{Binding}">
                      <Rectangle.Fill>
                        <SolidColorBrush Color="{Binding DataContext.Color, ElementName=scopeProxy}" />
                      </Rectangle.Fill>
                    </Rectangle>
                  </DataTemplate>
                </ComboBox.ItemTemplate>
              </controls:ComboBox>
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.LockSize}" />
            </Grid>
            <!--  Color  -->
            <Grid Grid.Column="5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <xctk:ColorPicker
                Grid.Column="0"
                VerticalAlignment="Center"
                SelectedColor="{Binding Color}"
                ShowDropDownButton="False" />
              <CheckBox
                Grid.Column="1"
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.LockColor}" />
            </Grid>
            <!--  IsVisible  -->
            <StackPanel Grid.Column="6" Orientation="Horizontal">
              <CheckBox
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource VisibilityCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.IsVisible}" />
              <CheckBox
                Width="32"
                Height="32"
                Padding="0"
                VerticalAlignment="Center"
                IsChecked="{Binding OverrideIsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource LockCheckBox}"
                ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.LockVisibility}" />
            </StackPanel>

            <materialDesign:PackIcon
              Grid.Column="7"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Foreground="Red"
              Kind="Information"
              Visibility="{Binding IsValid, Converter={StaticResource BooleanToNotVisibilityConverter}}">
              <materialDesign:PackIcon.ToolTip>
                <ToolTip Background="Red" DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                  <ItemsControl ItemsSource="{Binding Errors}">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate DataType="validation:ValidationMessage">
                        <TextBlock Foreground="White" Text="{Binding Message}" />
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ItemsControl>
                </ToolTip>
              </materialDesign:PackIcon.ToolTip>
            </materialDesign:PackIcon>
          </Grid>
        </Border>
      </DataTemplate>

    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto" />
      <RowDefinition />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>
    <FrameworkElement Name="proxy" DataContext="{Binding}" />
    <Grid Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <!--  Liste des groupes d'options  -->
      <StackPanel Grid.Column="0">
        <ListView
          VerticalAlignment="Stretch"
          ItemsSource="{Binding Source={StaticResource Overrides}}"
          ScrollViewer.HorizontalScrollBarVisibility="Auto"
          SelectedItem="{Binding SelectedGroup}">
          <ListView.ItemTemplate>
            <DataTemplate>
              <TextBlock
                Margin="40,2,40,2"
                VerticalAlignment="Center"
                FontWeight="Bold"
                Text="{Binding ., Converter={StaticResource OverrideGroupToTitleConverter}}" />
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </StackPanel>
      <Grid
        Grid.Column="1"
        Width="2"
        Margin="0"
        Background="LightGray" />

      <Grid Column="2">
        <Grid IsSharedSizeScope="True">

          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>
          <!--  Curves Headers  -->
          <Grid Row="0">
            <Grid.Visibility>
              <MultiBinding Converter="{StaticResource BooleanOrToVisibilityConverter}">
                <Binding
                  Converter="{StaticResource OverrideGroupEqualsConverter}"
                  ConverterParameter="Prescans"
                  Path="SelectedGroup" />
                <Binding
                  Converter="{StaticResource OverrideGroupEqualsConverter}"
                  ConverterParameter="Limits"
                  Path="SelectedGroup" />
              </MultiBinding>
            </Grid.Visibility>
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="Auto"
                MinWidth="60"
                SharedSizeGroup="CurveAction" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="CurveDetecteur" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="CurvePosition" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="CurveSize" />
              <ColumnDefinition
                Width="120"
                MinWidth="60"
                SharedSizeGroup="CurveColor" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="CurveVisibility" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel
              Grid.Column="1"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderByDetectorCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Detector}" />
              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByDetector, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByDetector}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByDetector}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <StackPanel
              Grid.Column="2"
              HorizontalAlignment="Center"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderCurvesByPositionCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Position}" />
              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByPositionCurves, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByPositionCurves}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByPositionCurves}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>
            <!--<TextBlock HorizontalAlignment="Center" FontWeight="Bold" Text="Position" Grid.Column="2"></TextBlock>-->
            <TextBlock
              Grid.Column="3"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Size}" />
            <TextBlock
              Grid.Column="4"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Color}" />
            <TextBlock
              Grid.Column="5"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Visibility}" />
          </Grid>

          <!--  External Curves Headers  -->
          <Grid Row="0">
            <Grid.Visibility>
              <MultiBinding Converter="{StaticResource BooleanOrToVisibilityConverter}">
                <Binding
                  Converter="{StaticResource OverrideGroupEqualsConverter}"
                  ConverterParameter="Externals"
                  Path="SelectedGroup" />
              </MultiBinding>
            </Grid.Visibility>
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="Auto"
                MinWidth="60"
                SharedSizeGroup="ExternalCurveAction" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="ExternalCurveProject" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="ExternalCurveName" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="ExternalCurvePosition" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="ExternalCurveSize" />
              <ColumnDefinition
                Width="120"
                MinWidth="60"
                SharedSizeGroup="ExternalCurveColor" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="ExternalCurveVisibility" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel
              Grid.Column="1"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderByCurveProjectCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Project}" />
              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByProject, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByProject}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByProject}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <StackPanel
              Grid.Column="2"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderByCurveNameCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Name}" />

              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByCurveName, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByCurveName}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByCurveName}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <StackPanel
              Grid.Column="3"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderExternalCurvesByPositionCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Position}" />

              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByPositionExternalCurve, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByPositionExternalCurve}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByPositionExternalCurve}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <!--<TextBlock HorizontalAlignment="Center" FontWeight="Bold" Text="Position" Grid.Column="2"></TextBlock>-->
            <TextBlock
              Grid.Column="4"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Size}" />
            <TextBlock
              Grid.Column="5"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Color}" />
            <TextBlock
              Grid.Column="6"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Visibility}" />
          </Grid>

          <!--  Points Headers  -->
          <Grid Grid.Row="0">
            <Grid.Visibility>
              <MultiBinding Converter="{StaticResource BooleanOrToVisibilityConverter}">
                <Binding
                  Converter="{StaticResource OverrideGroupEqualsConverter}"
                  ConverterParameter="Suspects"
                  Path="SelectedGroup" />
                <Binding
                  Converter="{StaticResource OverrideGroupEqualsConverter}"
                  ConverterParameter="Finals"
                  Path="SelectedGroup" />
              </MultiBinding>
            </Grid.Visibility>
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="Auto"
                MinWidth="60"
                SharedSizeGroup="PointAction" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointSource" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointColumn" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointPosition" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointSymbol" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointSize" />
              <ColumnDefinition Width="120" SharedSizeGroup="PointColor" />
              <ColumnDefinition Width="65" SharedSizeGroup="PointProjection" />
              <ColumnDefinition
                Width="*"
                MinWidth="60"
                SharedSizeGroup="PointVisibility" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel
              Grid.Column="1"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderBySourceCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Source}" />
              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderBySource, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderBySource}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderBySource}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <StackPanel
              Grid.Column="2"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderByColumnCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Column}" />
              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByColumn, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByColumn}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByColumn}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <StackPanel
              Grid.Column="3"
              HorizontalAlignment="Center"
              Background="Transparent"
              Orientation="Horizontal">
              <StackPanel.InputBindings>
                <MouseBinding Command="{Binding OrderPointsByPositionCommand}" MouseAction="LeftClick" />
              </StackPanel.InputBindings>
              <TextBlock FontWeight="Bold" Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Position}" />
              <materialDesign:PackIcon FontWeight="Bold" Visibility="{Binding OrderByPositionPoints, Converter={StaticResource EnumMatchToNotVisibilityConverter}, ConverterParameter=None}">
                <materialDesign:PackIcon.Style>
                  <Style TargetType="materialDesign:PackIcon">
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding OrderByPositionPoints}" Value="ASC">
                        <Setter Property="Kind" Value="ArrowDown" />
                      </DataTrigger>
                      <DataTrigger Binding="{Binding OrderByPositionPoints}" Value="DESC">
                        <Setter Property="Kind" Value="ArrowUp" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </materialDesign:PackIcon.Style>
              </materialDesign:PackIcon>
            </StackPanel>

            <TextBlock
              Grid.Column="4"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Symbol}" />
            <TextBlock
              Grid.Column="5"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Size}" />
            <TextBlock
              Grid.Column="6"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Color}" />
            <TextBlock
              Grid.Column="7"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Projection}" />
            <TextBlock
              Grid.Column="8"
              HorizontalAlignment="Center"
              FontWeight="Bold"
              Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Visibility}" />
          </Grid>

          <!--  Prescans  -->
          <Grid Grid.Row="1" Visibility="{Binding SelectedGroup, Converter={StaticResource SelectionToOverrideGroupConverter}, ConverterParameter=Prescans}">
            <Grid>
              <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemTemplate="{StaticResource CurveTemplate}" ItemsSource="{Binding PrescansView}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ScrollViewer>
            </Grid>
          </Grid>
          <!--  Limits  -->
          <Grid Grid.Row="1" Visibility="{Binding SelectedGroup, Converter={StaticResource SelectionToOverrideGroupConverter}, ConverterParameter=Limits}">
            <Grid>
              <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemTemplate="{StaticResource CurveTemplate}" ItemsSource="{Binding LimitsView}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ScrollViewer>
            </Grid>
          </Grid>

          <!--  Limits  -->
          <Grid Grid.Row="1" Visibility="{Binding SelectedGroup, Converter={StaticResource SelectionToOverrideGroupConverter}, ConverterParameter=Externals}">
            <Grid>
              <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemTemplate="{StaticResource ExternalCurveTemplate}" ItemsSource="{Binding ExternalsView}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ScrollViewer>
            </Grid>
          </Grid>

          <!--  Suspects  -->
          <Grid Grid.Row="1" Visibility="{Binding SelectedGroup, Converter={StaticResource SelectionToOverrideGroupConverter}, ConverterParameter=Suspects}">
            <Grid>
              <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemTemplate="{StaticResource PointTemplate}" ItemsSource="{Binding SuspectsView}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ScrollViewer>
            </Grid>
          </Grid>
          <!--  Finals  -->
          <Grid Row="1" Visibility="{Binding SelectedGroup, Converter={StaticResource SelectionToOverrideGroupConverter}, ConverterParameter=Finals}">
            <Grid>
              <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemTemplate="{StaticResource PointTemplate}" ItemsSource="{Binding FinalsView}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </ScrollViewer>
            </Grid>
          </Grid>
          <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button
              Background="Transparent"
              BorderBrush="Transparent"
              Command="{Binding AddCommand}">
              <StackPanel Margin="2,0" Orientation="Horizontal">
                <materialDesign:PackIcon
                  VerticalAlignment="Center"
                  Foreground="Green"
                  Kind="PlusCircle" />
                <TextBlock
                  Margin="5,0"
                  VerticalAlignment="Center"
                  Foreground="Black"
                  Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.AddNewStyle}" />
              </StackPanel>

            </Button>
          </StackPanel>
        </Grid>
      </Grid>
    </Grid>
    <StackPanel Grid.Row="0" Orientation="Vertical">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TextBlock
          Grid.Column="1"
          HorizontalAlignment="Center"
          FontSize="20"
          FontWeight="Bold"
          Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.EMIOverride}" />
        <materialDesign:PackIcon
          Grid.Column="2"
          Margin="10,0"
          HorizontalAlignment="Right"
          Background="Transparent"
          Foreground="Black"
          Kind="QuestionMark">
          <materialDesign:PackIcon.InputBindings>
            <MouseBinding Command="{Binding GoToHelpCommand}" MouseAction="LeftClick" />
          </materialDesign:PackIcon.InputBindings>
          <materialDesign:PackIcon.Style>
            <Style TargetType="materialDesign:PackIcon">
              <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                  <Setter Property="Opacity" Value="1" />
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False">
                  <Setter Property="Opacity" Value="0.5" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </materialDesign:PackIcon.Style>
        </materialDesign:PackIcon>
      </Grid>
      <Border
        Height="2"
        Margin="5"
        HorizontalAlignment="Stretch"
        Background="{StaticResource DividerBrush}"
        SnapsToDevicePixels="True" />
    </StackPanel>
    <TextBlock
      Grid.Row="2"
      HorizontalAlignment="Center"
      Foreground="Red"
      Text="{Binding InvalidExportMessage}"
      Visibility="{Binding InvalidExportMessage, Converter={StaticResource StringNullOrEmptyToVisibilityConverter}}" />
    <StackPanel
      Grid.Row="3"
      HorizontalAlignment="Right"
      Orientation="Horizontal">
      <TextBlock
        Margin="5,0,0,0"
        VerticalAlignment="Center"
        Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.ConfigurationDirectory}" />
      <TextBlock
        Margin="0,0,20,0"
        VerticalAlignment="Center"
        Text="{Binding SaveDirectory}" />
      <Button
        Margin="3,1"
        Command="{Binding ClearCacheCommand}"
        Content="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.ClearCache}"
        ToolTip="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.ResetValuesInComboboxWithADefaultListUseItIfYouHaveTooManyValuesInACombobox}" />
      <Button
        Margin="3,1"
        Command="{Binding ImportCommand}"
        Content="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Import}" />
      <Button
        Margin="3,1"
        Command="{Binding ExportCommand}"
        Content="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Export}" />
      <Button
        Margin="3,1"
        Command="{Binding SaveCommand}"
        IsEnabled="{Binding AreAllStylesValid}">
        <TextBlock Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Ok}" />
      </Button>
      <Button Margin="3,1" Command="{Binding CancelCommand}">
        <TextBlock Text="{Resx Nexio.Bat.Emi.VisuV4.Definition.Properties.Resources.Cancel}" />
      </Button>
    </StackPanel>
  </Grid>
</UserControl>
