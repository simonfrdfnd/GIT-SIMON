//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexioMax3.Definition.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NexioMax3.Definition.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new style.
        /// </summary>
        internal static string AddNewStyle {
            get {
                return ResourceManager.GetString("AddNewStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string All {
            get {
                return ResourceManager.GetString("All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applied style.
        /// </summary>
        internal static string AppliedStyle {
            get {
                return ResourceManager.GetString("AppliedStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure to delete the cache ?.
        /// </summary>
        internal static string AreYouSureToDeleteTheCache {
            get {
                return ResourceManager.GetString("AreYouSureToDeleteTheCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one combination Column/Position covers this Source&apos;s combination.
        /// </summary>
        internal static string AtLeastOneCombinationColumnPositionCoversThisSourceSCombination {
            get {
                return ResourceManager.GetString("AtLeastOneCombinationColumnPositionCoversThisSourceSCombination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one combination Project/Position covers this Source&apos;s combination.
        /// </summary>
        internal static string AtLeastOneCombinationProjectPositionCoversThisSourceSCombination {
            get {
                return ResourceManager.GetString("AtLeastOneCombinationProjectPositionCoversThisSourceSCombination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear cache.
        /// </summary>
        internal static string ClearCache {
            get {
                return ResourceManager.GetString("ClearCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        internal static string Color {
            get {
                return ResourceManager.GetString("Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column.
        /// </summary>
        internal static string Column {
            get {
                return ResourceManager.GetString("Column", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration directory:.
        /// </summary>
        internal static string ConfigurationDirectory {
            get {
                return ResourceManager.GetString("ConfigurationDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete cache.
        /// </summary>
        internal static string DeleteCache {
            get {
                return ResourceManager.GetString("DeleteCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detector.
        /// </summary>
        internal static string Detector {
            get {
                return ResourceManager.GetString("Detector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found.
        /// </summary>
        internal static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMI Override.
        /// </summary>
        internal static string EMIOverride {
            get {
                return ResourceManager.GetString("EMIOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMI Override&apos;s default save directory is not accessible. Do you want to save this configuration somewhere else ?.
        /// </summary>
        internal static string EMIOverrideSDefaultSaveDirectoryIsNotAccessible {
            get {
                return ResourceManager.GetString("EMIOverrideSDefaultSaveDirectoryIsNotAccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        internal static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Complete.
        /// </summary>
        internal static string ExportComplete {
            get {
                return ResourceManager.GetString("ExportComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        internal static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imported From File.
        /// </summary>
        internal static string ImportedFromFile {
            get {
                return ResourceManager.GetString("ImportedFromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is Visible.
        /// </summary>
        internal static string IsVisible {
            get {
                return ResourceManager.GetString("IsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Color.
        /// </summary>
        internal static string LockColor {
            get {
                return ResourceManager.GetString("LockColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Size.
        /// </summary>
        internal static string LockSize {
            get {
                return ResourceManager.GetString("LockSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock Visibility.
        /// </summary>
        internal static string LockVisibility {
            get {
                return ResourceManager.GetString("LockVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No name for this curve.
        /// </summary>
        internal static string NoNameForThisCurve {
            get {
                return ResourceManager.GetString("NoNameForThisCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        internal static string Ok {
            get {
                return ResourceManager.GetString("Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old Project (V3) or Max.
        /// </summary>
        internal static string OldProjectV3OrMax {
            get {
                return ResourceManager.GetString("OldProjectV3OrMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover all columns for this source.
        /// </summary>
        internal static string OneOrMoreStyleCoverAllColumnsForThisSource {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverAllColumnsForThisSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover all positions for this Curve.
        /// </summary>
        internal static string OneOrMoreStyleCoverAllPositionsForThisCurve {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverAllPositionsForThisCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover all positions for this detector.
        /// </summary>
        internal static string OneOrMoreStyleCoverAllPositionsForThisDetector {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverAllPositionsForThisDetector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover all positions for this source.
        /// </summary>
        internal static string OneOrMoreStyleCoverAllPositionsForThisSource {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverAllPositionsForThisSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover all projects for this detector.
        /// </summary>
        internal static string OneOrMoreStyleCoverAllProjectsForThisDetector {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverAllProjectsForThisDetector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover have the same position for this detector.
        /// </summary>
        internal static string OneOrMoreStyleCoverHaveTheSamePositionForThisDetector {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverHaveTheSamePositionForThisDetector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more style cover have the same project for this detector.
        /// </summary>
        internal static string OneOrMoreStyleCoverHaveTheSameProjectForThisDetector {
            get {
                return ResourceManager.GetString("OneOrMoreStyleCoverHaveTheSameProjectForThisDetector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        internal static string Other {
            get {
                return ResourceManager.GetString("Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Color.
        /// </summary>
        internal static string OverrideColor {
            get {
                return ResourceManager.GetString("OverrideColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Projection.
        /// </summary>
        internal static string OverrideProjection {
            get {
                return ResourceManager.GetString("OverrideProjection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override Size.
        /// </summary>
        internal static string OverrideSize {
            get {
                return ResourceManager.GetString("OverrideSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position.
        /// </summary>
        internal static string Position {
            get {
                return ResourceManager.GetString("Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project.
        /// </summary>
        internal static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Projection.
        /// </summary>
        internal static string Projection {
            get {
                return ResourceManager.GetString("Projection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset values in combobox with a default list. (Use it if you have too many values in a combobox).
        /// </summary>
        internal static string ResetValuesInComboboxWithADefaultListUseItIfYouHaveTooManyValuesInACombobox {
            get {
                return ResourceManager.GetString("ResetValuesInComboboxWithADefaultListUseItIfYouHaveTooManyValuesInACombobox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select EMI Override configuration to import.
        /// </summary>
        internal static string SelectEMIOverrideConfigurationToImport {
            get {
                return ResourceManager.GetString("SelectEMIOverrideConfigurationToImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        internal static string Size {
            get {
                return ResourceManager.GetString("Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source.
        /// </summary>
        internal static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Styles export complete.
        /// </summary>
        internal static string StylesExportComplete {
            get {
                return ResourceManager.GetString("StylesExportComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbol.
        /// </summary>
        internal static string Symbol {
            get {
                return ResourceManager.GetString("Symbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Combination Project/Name/Position is already defined.
        /// </summary>
        internal static string ThisCombinationProjectNamePositionIsAlreadyDefined {
            get {
                return ResourceManager.GetString("ThisCombinationProjectNamePositionIsAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Combination Source/Column/Position is already defined.
        /// </summary>
        internal static string ThisCombinationSourceColumnPositionIsAlreadyDefined {
            get {
                return ResourceManager.GetString("ThisCombinationSourceColumnPositionIsAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate EMI Override&apos;s file&apos;s directory. Please check your configuration. The editor will use the default settings..
        /// </summary>
        internal static string UnableToLocateEMIOverrideSFileSDirectory {
            get {
                return ResourceManager.GetString("UnableToLocateEMIOverrideSFileSDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visibility.
        /// </summary>
        internal static string Visibility {
            get {
                return ResourceManager.GetString("Visibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your combination Column/Source is already covered.
        /// </summary>
        internal static string YourCombinationColumnSourceIsAlreadyCovered {
            get {
                return ResourceManager.GetString("YourCombinationColumnSourceIsAlreadyCovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your combination Position/Source is already covered.
        /// </summary>
        internal static string YourCombinationPositionSourceIsAlreadyCovered {
            get {
                return ResourceManager.GetString("YourCombinationPositionSourceIsAlreadyCovered", resourceCulture);
            }
        }
    }
}
