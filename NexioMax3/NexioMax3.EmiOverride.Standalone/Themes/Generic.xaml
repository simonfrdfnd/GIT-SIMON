<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:Nexio.Wpf.Converters;assembly=Nexio.Wpf"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit">

  <converters:NotConverter x:Key="NotConverter" />
  <LinearGradientBrush x:Key="PopupDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStop Offset="0" Color="#FFA3AEB9" />
    <GradientStop Offset="0.375" Color="#FF8399A9" />
    <GradientStop Offset="0.375" Color="#FF718597" />
    <GradientStop Offset="1" Color="#FF617584" />
  </LinearGradientBrush>
  <Geometry x:Key="DownArrowGeometry">M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z</Geometry>

  <!--<Style x:Key="DropDownButtonStyle" TargetType="{x:Type xceed:DropDownButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type xceed:DropDownButton}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
            <ToggleButton
              x:Name="PART_DropDownButton"
              Grid.Column="1"
              IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
              IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NotConverter}}">
              <ToggleButton.Template>
                <ControlTemplate TargetType="ToggleButton">
                  <ContentPresenter />
                </ControlTemplate>
              </ToggleButton.Template>
              <Grid>
                <xceed:ButtonChrome
                  x:Name="ToggleButtonChrome"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="2.75"
                  Foreground="{TemplateBinding Foreground}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      Content="{TemplateBinding Content}"
                      ContentTemplate="{TemplateBinding ContentTemplate}"
                      RecognizesAccessKey="true" />
                    <Grid
                      x:Name="arrowGlyph"
                      Grid.Column="1"
                      Margin="4,3,4,3"
                      IsHitTestVisible="False">
                      <Path
                        x:Name="Arrow"
                        Width="9"
                        Height="5"
                        Margin="0,1,0,0"
                        Data="{StaticResource DownArrowGeometry}"
                        Fill="#FF000000" />
                    </Grid>
                  </Grid>
                </xceed:ButtonChrome>
              </Grid>
            </ToggleButton>

            <Popup
              x:Name="PART_Popup"
              AllowsTransparency="True"
              Focusable="False"
              HorizontalOffset="1"
              IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
              Placement="{TemplateBinding DropDownPosition}"
              StaysOpen="False"
              ToolTip="{x:Static sys:String.Empty}"
              VerticalOffset="1">
              <Popup.Resources>
                <Style TargetType="ToolTip">
                  <Style.Triggers>
                    <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                      <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Popup.Resources>
              <Border
                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                Background="{TemplateBinding DropDownContentBackground}"
                BorderBrush="{StaticResource PopupDarkBorderBrush}"
                BorderThickness="1">
                <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Auto">
                  <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}" />
                </ScrollViewer>
              </Border>
            </Popup>

          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>-->

  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              Margin="2"
              Stroke="#60000000"
              StrokeDashArray="1 2"
              StrokeThickness="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Color x:Key="ControlMouseOverColor">Transparent</Color>
  <Color x:Key="ControlPressedColor">Transparent</Color>
  <Color x:Key="PressedBorderLightColor">LightGray</Color>
  <Color x:Key="PressedBorderDarkColor">LightGray</Color>
  <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
  <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
  <Color x:Key="DisabledForegroundColor">#FF888888</Color>

  <Style x:Key="AnchorableButtonStyle" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
    <Setter Property="MinHeight" Value="23" />
    <Setter Property="MinWidth" Value="75" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            x:Name="Border"
            BorderThickness="1"
            CornerRadius="2"
            TextBlock.Foreground="{TemplateBinding Foreground}">
            <Border.BorderBrush>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                    <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                  </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>

            </Border.BorderBrush>
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
                <GradientStop Offset="1" Color="{DynamicResource ControlMediumColor}" />
              </LinearGradientBrush>
            </Border.Background>
            <Grid Background="Transparent">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <ContentPresenter
                Margin="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True" />
              <Border
                Name="Underline"
                Grid.Row="1"
                Height="2"
                Margin="5"
                VerticalAlignment="Stretch"
                Background="{StaticResource DividerBrush}"
                SnapsToDevicePixels="True">
                <Border.Style>
                  <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding IsMouseOver, ElementName=Border}" Value="True">
                        <Setter Property="Visibility" Value="Visible" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Border.Style>
              </Border>
            </Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0:0:0.2" />
                  <VisualTransition GeneratedDuration="0" To="Pressed" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderDarkColor}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderLightColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                      <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="true">

              <Setter TargetName="Border" Property="BorderBrush">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientBrush.GradientStops>
                      <GradientStopCollection>
                        <GradientStop Offset="0.0" Color="{DynamicResource DefaultBorderBrushLightBrush}" />
                        <GradientStop Offset="1.0" Color="{DynamicResource DefaultBorderBrushDarkColor}" />
                      </GradientStopCollection>
                    </GradientBrush.GradientStops>
                  </LinearGradientBrush>

                </Setter.Value>
              </Setter>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
